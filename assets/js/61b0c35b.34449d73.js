"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[92],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},46891:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={title:"Proof Validator",slug:"/relay-contracts/evm/validator",hide_title:!0},i=void 0,s={unversionedId:"relay-contracts/evm/validator",id:"relay-contracts/evm/validator",title:"Proof Validator",description:"Methods",source:"@site/docs/relay-contracts/evm/validator.mdx",sourceDirName:"relay-contracts/evm",slug:"/relay-contracts/evm/validator",permalink:"/ibcf-docs/relay-contracts/evm/validator",draft:!1,editUrl:"https://github.com/airgap-it/ibcf-docs/docs/relay-contracts/evm/validator.mdx",tags:[],version:"current",frontMatter:{title:"Proof Validator",slug:"/relay-contracts/evm/validator",hide_title:!0},sidebar:"docs",previous:{title:"EIP-1186 Proof Validator",permalink:"/ibcf-docs/relay-contracts/tezos/validator"},next:{title:"Bridge",permalink:"/ibcf-docs/examples/bridge"}},l={},c=[{value:"Methods",id:"methods",level:2},{value:"<code>submit_state_root</code>",id:"submit_state_root",level:3},{value:"Views",id:"views",level:2},{value:"<code>verify_proof</code>",id:"verify_proof",level:3}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"submit_state_root"},(0,o.kt)("inlineCode",{parentName:"h3"},"submit_state_root")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"submit_state_root(uint snapshot_number, bytes32 state_root)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Relayers call this method with the snapshot state roots of a Tezos chain."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Requires permissions?")," Yes, only ",(0,o.kt)("inlineCode",{parentName:"p"},"relayers")," can call this method."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("h2",{id:"views"},"Views"),(0,o.kt)("h3",{id:"verify_proof"},(0,o.kt)("inlineCode",{parentName:"h3"},"verify_proof")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"function verify_proof(\n    uint snapshot_number,\n    bytes memory owner,\n    bytes memory key,\n    bytes memory value,\n    bytes32[2][] memory proof\n);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:"),"\nContracts in a EVM chain can call this method to validate that a given state exists on the Tezos blockchain at a snapshot."),(0,o.kt)("p",null,"It first asserts that the snapshot state was signed by at least ",(0,o.kt)("inlineCode",{parentName:"p"},"X")," validators and then validates the proof against the snapshot state."))}d.isMDXComponent=!0}}]);