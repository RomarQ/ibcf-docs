"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[361],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"State Aggregator",slug:"/relay-contracts/tezos/state",hide_title:!0},s=void 0,i={unversionedId:"relay-contracts/tezos/state",id:"relay-contracts/tezos/state",title:"State Aggregator",description:"Methods",source:"@site/docs/relay-contracts/tezos/state.mdx",sourceDirName:"relay-contracts/tezos",slug:"/relay-contracts/tezos/state",permalink:"/ibcf-docs/relay-contracts/tezos/state",draft:!1,editUrl:"https://github.com/airgap-it/ibcf-docs/docs/relay-contracts/tezos/state.mdx",tags:[],version:"current",frontMatter:{title:"State Aggregator",slug:"/relay-contracts/tezos/state",hide_title:!0},sidebar:"docs",previous:{title:"Overview",permalink:"/ibcf-docs/relay-contracts"},next:{title:"EIP-1186 Proof Validator",permalink:"/ibcf-docs/relay-contracts/tezos/validator"}},l={},p=[{value:"Methods",id:"methods",level:2},{value:"<code>insert</code>",id:"insert",level:3},{value:"<code>configure</code>",id:"configure",level:3},{value:"<code>snapshot</code>",id:"snapshot",level:3},{value:"Views",id:"views",level:2},{value:"<code>get_proof</code>",id:"get_proof",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"insert"},(0,o.kt)("inlineCode",{parentName:"h3"},"insert")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Input type:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(pair %insert\n    (bytes %key)\n    (bytes %value)\n)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Contracts in a Tezos ecosystem can call this method to insert (",(0,o.kt)("em",{parentName:"p"},"key"),", ",(0,o.kt)("em",{parentName:"p"},"value"),") entries into a Merkle tree."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Requires permissions?")," No, anyone is allowed to call this method."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("h3",{id:"configure"},(0,o.kt)("inlineCode",{parentName:"h3"},"configure")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Input type:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(list %configure\n    (or\n        (address %update_administrator)\n        (nat %update_max_state_size)\n        (nat %update_snapshot_duration)\n    )\n)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," This method modifies the contract configurations."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Requires permissions?")," Yes, only the multisig administrator can call this method."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("h3",{id:"snapshot"},(0,o.kt)("inlineCode",{parentName:"h3"},"snapshot")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Input type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"(unit %snapshot)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," This method finalizes the current ongoing snapshot if the following condition is met: ",(0,o.kt)("inlineCode",{parentName:"p"},"current_level > snapshot_start_level + snapshot_duration"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Requires permissions?")," No, anyone is allowed to call this method."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("h2",{id:"views"},"Views"),(0,o.kt)("h3",{id:"get_proof"},(0,o.kt)("inlineCode",{parentName:"h3"},"get_proof")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Input type:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(pair\n    (bytes %key)\n    (address %owner)\n)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output type:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(pair\n    (bytes %key)\n    (bytes %merkle_root)\n    (list %proof (or (bytes %Left) (bytes %Right)))\n    (nat %snapshot)\n    (bytes %value)\n)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Returns the Merkle-proof for a given data entry."))}d.isMDXComponent=!0}}]);